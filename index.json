
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    [{"authors":null,"categories":null,"content":"In this guide we will learn how to configure which IPs and VLANs users connected via UniFi Teleport can access.\nStep 1. Identify the IP range that Teleport uses. In order to know who we are controlling we need the know the IP range. One way to find this is to inspect a device connected with UniFi Teleport.\nTo do this, open the Network app and navigate to Client Devices. On this page you will find a list of all the clients and their IP address. Clients that are connected with UniFi Teleport will have the connection type of “VPN”. In Figure 1 you can see I have two devices one with the IP “192.168.2.3” and “192.168.2.2”, so, the subnet for this Teleport instance would be “192.168.2.0/24”.\nFigure 1\nStep 2. Create an IP group with the Teleport subnet Open the Network app and navigate to, Settings \u0026gt; Profiles \u0026gt; IP Groups, then at the bottom of the table click Create New.\nThen fill out options with the following options:\nProfile Name: (this can be whatever you want, I’ve called it “Teleport Users”) Type: IPv4 Address/Subnet Address: (Use the subnet we found earlier, in my case its “192.168.2.0/24”) Then, press Add (to the right of the Address), and Add at the bottom of the page.\nFigure 2\nStep 3. Block Teleport from all VLANs By default we should block Teleport from accessing all VLANs, then only allow the ones we Teleport to have.\nTo do this, open the Network app and navigate to Settings \u0026gt; Security \u0026gt; Traffic \u0026amp; Firewall Rules \u0026gt; Advanced. Scroll to the bottom, then press Create Entry.\nThen fill out the form just like I have in Figure 3.\nFigure 3\nYou can change the name to be whatever you want, and use the same Address Group you made earlier.\nStep 4. Create an allowlist for Teleport. To create an allowlist, create another IP group like we did Step 2, but instead of having the Teleport subnet, you should have all the IPs or subnets you want Teleport to have. For an example you can look at Figure 4.\nFigure 4\nStep 4.2. Create a firewall rule for the allowlist. On the same page where we made the “Block Teleport users from LAN” rule, we should make another rule, by using a similar process like in Step 3. Then fill out the form like seen in Figure 5.\nFigure 5\nYou may call the rule what ever you want, and you must make sure to use the Address Groups we made earlier.\nStep 4.3. Move the allow rule above the block rule All firewall rules are applied from the top to bottom, so if you have a block rule above an allow rule, then your block rule will take priority. So we must make sure the allowlist rule is above our blocking rule. To do this, you can grab the 6 dots icon next to the allow rule and move it above the block rule. If done successfully, it will appear like seen in Figure 6.\nFigure 6\n","date":1728482453,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"75449787184ef689b01d8bdc0d5c28f3","permalink":"https://ajh123.github.io/post/controlling-which-vlans-unifi-teleport-can-use/","publishdate":"2024-10-09T14:00:53Z","relpermalink":"/post/controlling-which-vlans-unifi-teleport-can-use/","section":"post","summary":"In this guide we will learn how to configure which IPs and VLANs users connected via UniFi Teleport can access.\nStep 1. Identify the IP range that Teleport uses. In order to know who we are controlling we need the know the IP range. One way to find this is to inspect a device connected with UniFi Teleport.\nTo do this, open the Network app and navigate to Client Devices. On this page you will find a list of all the clients and their IP address. Clients that are connected with UniFi Teleport will have the connection type of “VPN”. In Figure 1 you can see I have two devices one with the IP “192.168.2.3” and “192.168.2.2”, so, the subnet for this Teleport instance would be “192.168.2.0/24”.\n","tags":["UniFi","Authentication"],"title":"Controlling Which Vlans UniFi Teleport Can Use","type":"post"},{"authors":null,"categories":null,"content":"In this guide we will set up a VPN on a UniFi network that uses a RADIUS server that is backed by Active Directory for authentication.\nStep 1. Set up a RADIUS server To use RADIUS for authentication, you must have a RADIUS server configured. The RADIUS server built into UniFi cannot be configured to use Active Directory, so an external RADIUS server is required. Here is a list of potential RADIUS servers you can use:\nMicrosoft Network Policy Server (NPS) Introduction guide (Windows Server only) FreeRADIUS (Potentially Linux only? [TBC]) 1 Step 2. Create a RADIUS profile in UniFi A RADIUS profile is required to tell UniFi where to find the RADIUS server. To create a RADIUS profile, open the Network app and navigate to Settings \u0026gt; Profiles \u0026gt; RADIUS. At the bottom of the table, click Create New.\nFigure 1. A screenshot of the UniFi create RADIUS profile page\nOnce you have done that, you will get the form as shown in Figure 1. The options of the form that we are interested in are:\nName: This is the name RADIUS profile that will be displayed inside UniFi. Authentication Servers: This is where you enter the IP address, Port, and Shared Secret from your RADIUS authentication servers. Accounting: This is a checkbox that enables the Accounting Servers fields. Account Servers: This is where you enter the IP address, Port, and Shared Secret from your RADIUS accounting servers. In most setups, the RADIUS authentication port is 1812, the RADIUS accounting port is 1813, both IP addresses will point to the same RADIUS server, and the shared secret is what you have configured on your RADIUS server. Once you have done that, make sure to click Apply Changes at the bottom.\nStep 3. Create a UniFi VPN You can create a VPN on any UniFi Gateway by using a built-in VPN server. To do this, open the UniFi Network app, and navigate to Settings \u0026gt; VPN \u0026gt; VPN Server. Once you have done this, click Create New at the bottom of the table.\nFigure 2. UniFi create VPN page\nWhen you have done that, you will get another form, as shown in Figure 2. The options of the form that we are interested in are:\nVPN Type: Make sure you use Open VPN 2 Name: This is the name VPN profile that will be displayed inside UniFi. Advanced: Switch this to Manual to enable more options. RADIUS Profile: This is a dropdown list that contains all RADIUS profiles. Choose the profile you made in step 2. Gateway / Subnet: Use this option to configure the IP range for your VPN clients. If your UniFi Gateway is behind another NAT (e.g., another router) then make sure to enable Use Alternate Address for Clients and then fill out the input field with the WAN IP address of that router or use a public Fully Qualified Domain Name that points to your local network.\nIf you are using a Windows Server, you can create a Linux virtual machine using Hyper V, or with an alternative Hypervisor. ↩︎\nWireGuard does not have a RADIUS option, and L2TP is not supported by several operating systems (Ubiquiti does not recommend it). ↩︎\n","date":1728136811,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"da25e07283e1ce33d3a7c86b61349598","permalink":"https://ajh123.github.io/post/unifi-vpn-with-active-directory-and-radius/","publishdate":"2024-10-05T14:00:11Z","relpermalink":"/post/unifi-vpn-with-active-directory-and-radius/","section":"post","summary":"In this guide we will set up a VPN on a UniFi network that uses a RADIUS server that is backed by Active Directory for authentication.\nStep 1. Set up a RADIUS server To use RADIUS for authentication, you must have a RADIUS server configured. The RADIUS server built into UniFi cannot be configured to use Active Directory, so an external RADIUS server is required. Here is a list of potential RADIUS servers you can use:\n","tags":["UniFi","Authentication","Radius"],"title":"UniFi Vpn With Active Directory and Radius","type":"post"},{"authors":null,"categories":null,"content":"Prerequisites The following applications need to be installed on your system\nNext Cloud A Samba domain controller. The guide will assume some details:\nHostname: ipa.minersonline.lan Storage path: /DATA/AppData/freeipa-server Server IP: 10.0.0.97 You may changes these assumptions based on your requirements.\nSteps 1. Step up a System User Account The System User Account is a dedicated account that the Next Cloud instance will use to get user information from your Sa,ba server. Call the user Next Cloudsystemuser, and set a secure password and note it down.\nIf you have Windows clients connected to the domain then you can use the “Active Directory Users and Computers” program to add the user.\nIf not, you may need use the Samba command line tools.\n2. Allow Next Cloud to accept any LDAP certificate 1. Connect to your Next Cloud server’s console This depends on how you have installed Next Cloud. For me:\nsudo docker exec -it Next Cloud bash 2. Edit LDAP configuration Open the file /etc/ldap/ldap.conf and add the line to the bottom:\nTLS_REQCERT never 3. Restart Next Cloud You may need to restart your Next Cloud server. For me:\nsudo docker restart Next Cloud 3. Configure Next Cloud LDAP / AD Integration 1. Enable / Install the “LDAP user and group backend” app The “LDAP user and group backend” app is used to provide LDAP support for Next Cloud.\nGo to the Next Cloud apps page and enable the “LDAP user and group backend” app. Optionally, I recommend installing the “Write support for LDAP” and the \u0026#34; LDAP Contacts Backend\u0026#34; app. 2. Configure LDAP / AD connection settings Open the “Administration Settings” page and go to the “LDAP / AD integration” page.\nIn the “Host” field enter your Samba server’s hostname, for example: ldaps://ipa.minersonline.lan. If your running your Next Cloud in Docker then you may need to use the server’s IP address instead.\nSet the “Port” field to 636.\nSet the “User DN” to cn=Next Cloudsystemuser,cn=users,dc=minersonline,dc=lan\n[!NOTE] The Next Cloudsystemuser part is the user account we set earlier.\nThe dc=minersonline,dc=lan part depends on your Samba realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nSet the “Password” to what you noted down earlier.\nThen press “Save Credentials”.\nSet the “One Base DN per line” to dc=minersonline,dc=lan\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Samba realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nFinally, press “Continue”.\n3. Configure LDAP Groups On the same page click on the “Groups” tab.\nClick the “Edit LDAP Query” link.\nIn the “Edit LDAP Query” text box type: (\u0026amp;(objectclass=group)). This filter will add all Samba groups (even the default builtin ones).\n4. Configure LDAP Login Attributes On the same page click on the “Login Attributes” tab.\nClick the “Edit LDAP Query” link.\nIn the “Edit LDAP Query” text box type: (\u0026amp;(objectclass=person)).\nFinally, press “Continue”.\n5. Configure Advanced Settings On the same page click on the “Advanced” tab.\nOpen up the “Directory Settings” section.\nInside the “User Display Name” type displayName.\nInside the “Base User Tree” type cn=users,dc=minersonline,dc=lan.\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Samba realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nInside the “Base Group Tree” type cn=users,dc=minersonline,dc=lan\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Samba realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nSet the “Group-Member association” to member (AD).\nOpen up the “Special Attributes” section.\nSet the “User Home Folder Naming Rule” to cn.\nFinally press “Test Configuration”. If all settings are good then a “Valid configuration, connection established!” message should be displayed.\n","date":1703167382,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"8415322db827644ede45e9eb7c1de394","permalink":"https://ajh123.github.io/post/configuring-nextcloud-to-use-samaba/","publishdate":"2023-12-21T14:03:02Z","relpermalink":"/post/configuring-nextcloud-to-use-samaba/","section":"post","summary":"Prerequisites The following applications need to be installed on your system\nNext Cloud A Samba domain controller. The guide will assume some details:\nHostname: ipa.minersonline.lan Storage path: /DATA/AppData/freeipa-server Server IP: 10.0.0.97 You may changes these assumptions based on your requirements.\nSteps 1. Step up a System User Account The System User Account is a dedicated account that the Next Cloud instance will use to get user information from your Sa,ba server. Call the user Next Cloudsystemuser, and set a secure password and note it down.\n","tags":["Linux","Next Cloud","Authentication","Samba"],"title":"Configuring Next Cloud to Use Samba","type":"post"},{"authors":null,"categories":null,"content":"Prerequisites This guide recommends using Ubuntu 22.04 or later.\nThe guide will assume some details:\nServer IP: 10.0.0.97 Kerberos Realm: MINERSONLINE.LAN Kerberos server hostname: ipa.minersonline.lan Kerberos administrative server hostname: ipa.minersonline.lan You may changes these assumptions based on your requirements.\n1. Setup hostname Set the hostname.\nsudo hostnamectl set-hostname ipa.minersonline.lan Add the hostname to hosts file.\nsudo nano /etc/hosts Add the line 10.0.0.97 ipa.minersonline.lan ipa to the top of the file but change 10.0.0.97 to your machine’s IP\nPress Control + X then Y to save the file.\n2. Install dependencies sudo apt-get install samba krb5-user krb5-config winbind libpam-winbind libnss-winbind During installation you may get asked for your Kerberos Realm, Kerberos server hostname, and Kerberos administrative server hostname.\n3. Provision Samba 1. Stop existing Samba services sudo systemctl stop samba-ad-dc.service smbd.service nmbd.service winbind.service sudo systemctl disable samba-ad-dc.service smbd.service nmbd.service winbind.service 2. Backup Samba configuration sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.initial 3. Reconfigure Samba sudo samba-tool domain provision --use-rfc2307 --interactive You will get asked for the following information:\nRealm: MINERSONLINE.LAN. Domain: MINERSONLINE. Server Role: dc. DNS backend: SAMBA_INTERNAL. DNS forwarder IP address: Your DNS server’s IP (normally your gateway) or Cloudflare (1.1.1.1) or Google (8.8.8.8). Administrator password: Enter something secure and rememberable. 4. Make a link to use Samba’s Kerberos configuration sudo mv /etc/krb5.conf /etc/krb5.conf.initial sudo ln -s /var/lib/samba/private/krb5.conf /etc/ 4. Start Samba sudo samba 2. Configure local DNS DNS is used so external services can locate the domain controller and query the services located on it. This will allow clients to connect to the domain controller easily.\n1. Install resolvconf sudo apt install resolvconf sudo systemctl enable --now resolvconf.service 2. Configure resolvconf sudo nano /etc/resolvconf/resolv.conf.d/head Add nameserver 127.0.01 at the bottom. Press Control + X then Y to save the file. We use 127.0.0.1 because Samba is acting as the DNS server and they are forwarding external DNS requests to outside world.\n3. Delete conflicting DNS records Doing the command:\nsamba-tool dns query 10.0.0.97 minersonline.lan minersonline.lan A will allow you to check if you have conflicting DNS records. If the IPs 172.17.0.1, 172.19.0.1, and 172.18.0.1 appear above the server’s ipa 10.0.0.97. These conflicting records will confuse clients because they will try to connect to themselves instead of the domain controller.\nsamba-tool dns delete 10.0.0.97 minersonline.lan minersonline.lan A 172.17.0.1 samba-tool dns delete 10.0.0.97 minersonline.lan minersonline.lan A 172.19.0.1 samba-tool dns delete 10.0.0.97 minersonline.lan minersonline.lan A 172.18.0.1 samba-tool dns delete 10.0.0.97 minersonline.lan ipa.minersonline.lan A 172.17.0.1 samba-tool dns delete 10.0.0.97 minersonline.lan ipa.minersonline.lan A 172.19.0.1 samba-tool dns delete 10.0.0.97 minersonline.lan ipa.minersonline.lan A 172.18.0.1 4. Running Samba on startup Running Samba on system startup is a good idea if you want clients to be allowed to connect automatically. To do this run the following command:\nsudo update-rc.d smbd defaults 5. Testing / verification 1. Verify DNS is working host -t SRV _kerberos._udp.minersonline.lan You should get a message like:\n_kerberos._udp.minersonline.lan has SRV record 0 100 88 ipa.minersonline.lan. 2. Test Kerberos kinit administrator@MINERSONLINE.LAN You will get asked for the password you set earlier. If successful, you may get a response like Warning: Your password will expire in 41 days on Fri 26 Jan 2024 12:30:09 GMT.\nThe klist command will show you a list of your Kerberos tickets you made with kinit.\n","date":1703167340,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"0648b838fae17a95cdb34510f2c8e593","permalink":"https://ajh123.github.io/post/installing-samba-on-ubuntu/","publishdate":"2023-12-21T14:02:20Z","relpermalink":"/post/installing-samba-on-ubuntu/","section":"post","summary":"Prerequisites This guide recommends using Ubuntu 22.04 or later.\nThe guide will assume some details:\nServer IP: 10.0.0.97 Kerberos Realm: MINERSONLINE.LAN Kerberos server hostname: ipa.minersonline.lan Kerberos administrative server hostname: ipa.minersonline.lan You may changes these assumptions based on your requirements.\n1. Setup hostname Set the hostname.\nsudo hostnamectl set-hostname ipa.minersonline.lan Add the hostname to hosts file.\nsudo nano /etc/hosts Add the line 10.0.0.97 ipa.minersonline.lan ipa to the top of the file but change 10.0.0.97 to your machine’s IP\n","tags":["Linux","Samba"],"title":"Installing Samba on Ubuntu","type":"post"},{"authors":null,"categories":null,"content":"Prerequisites The following applications need to be installed on your system\nNext Cloud Free IPA. The guide will assume some details:\nFree IPA server hostname: ipa.minersonline.lan Free IPA realm domain: mineronline.lan You may changes these assumptions based on your requirements.\nSteps 1. Step up a System User Account The System User Account is a dedicated account that the Next Cloud instance will use to get user information from your Free IPA server.\n1. Login into the Free IPA web interface Open up your browser and navigate to https://ipa.minersonline.lan. Accept the security warning.\nIf not logged in, enter your admin account details. By default, the user name is admin and the password is the one you gave during the Free IPA installation.\n2. Add the user On the “Users” page click the “Add” button.\nSet the “User login” to something explanatory, for example: Next Cloudsystemuser.\nThe “First Name” and “Last Name” can be set to whatever you want, for example Next Cloud.\nSet the password to something secure and note it down.\n3. Make the user an “admin” The new user needs to be an admin so it can be used to receive information about all users.\nClick on the Next Cloudsystemuser user on the “Active Users” page.\nOpen the “User Groups” tab.\nClick on the “Add” button.\nClick the checkbox next to “admins”.\nIn the middle of the dialog press the button pointing to the right “\u0026gt;”.\nFinally, press “Add”.\n2. Configure Next Cloud LDAP / AD Integration 1. Enable / Install the “LDAP user and group backend” app The “LDAP user and group backend” app is used to provide LDAP support for Next Cloud.\nGo to the Next Cloud apps page and enable the “LDAP user and group backend” app. Optionally, I recommend installing the “Write support for LDAP” and the “LDAP Contacts Backend” app. 2. Configure LDAP / AD connection settings Open the “Administration Settings” page and go to the “LDAP / AD integration” page.\nIn the “Host” field enter your Free IPA server’s hostname, for example: ipa.minersonline.lan. If your running your Next Cloud in Docker then you may need to use the server’s IP address instead.\nSet the “Port” field to 389.\nSet the “User DN” to uid=Next Cloudsystemuser,cn=users,cn=accounts,dc=minersonline,dc=lan\n[!NOTE] The Next Cloudsystemuser part is the “User Login” we set earlier.\nThe dc=minersonline,dc=lan part depends on your Free IPA realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nSet the “Password” to what you noted down earlier.\nThen press “Save Credentials”.\nSet the “One Base DN per line” to dc=minersonline,dc=lan\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Free IPA realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nFinally, press “Continue”.\n3. Configure LDAP Groups On the same page click on the “Groups” tab.\nClick the “Edit LDAP Query” link.\nIn the “Edit LDAP Query” text box type: (|(cn=ipausers)). This filter will add the ipausers group from the Identity \u0026gt; Groups page on the Free IPA interface.\n4. Configure LDAP Login Attributes On the same page click on the “Login Attributes” tab.\nClick the “Edit LDAP Query” link.\nIn the “Edit LDAP Query” text box type: (\u0026amp;(objectclass=*)(uid=%uid)).\nFinally, press “Continue”.\n5. Configure Advanced Settings On the same page click on the “Advanced” tab.\nOpen up the “Directory Settings” section.\nInside the “Base User Tree” type cn=users,cn=accounts,dc=minersonline,dc=lan.\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Free IPA realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nInside the “Base Group Tree” type cn=groups,cn=accounts,dc=minersonline,dc=lan.\n[!NOTE] Again, The dc=minersonline,dc=lan part depends on your Free IPA realm domain. For example if your domain is office.example.com then you would use dc=office,dc=example,dc=com.\nSet the “Group-Member association” to member.\nOpen up the “Special Attributes” section.\nMake sure the “Email Field” is set to mail.\nSet the “User Home Folder Naming Rule” to cn.\nFinally press “Test Configuration”. If all settings are good then a “Valid configuration, connection established!” message should be displayed.\n","date":1702735466,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"c08db6c878290a7d4919176afa16efb6","permalink":"https://ajh123.github.io/post/configuring-nextcloud-to-use-freeipa/","publishdate":"2023-12-16T14:04:26Z","relpermalink":"/post/configuring-nextcloud-to-use-freeipa/","section":"post","summary":"Prerequisites The following applications need to be installed on your system\nNext Cloud Free IPA. The guide will assume some details:\nFree IPA server hostname: ipa.minersonline.lan Free IPA realm domain: mineronline.lan You may changes these assumptions based on your requirements.\nSteps 1. Step up a System User Account The System User Account is a dedicated account that the Next Cloud instance will use to get user information from your Free IPA server.\n","tags":["Linux","Next Cloud","Authentication","Free IPA"],"title":"Configuring Next Cloud to Use Free IPA","type":"post"},{"authors":null,"categories":null,"content":"Prerequisites The following applications need to be installed on your system:\nDocker Git The guide will assume some details:\nHostname: ipa.minersonline.lan Storage path: /DATA/AppData/Free IPA-server Server IP: 10.0.0.97 You may changes these assumptions based on your requirements. The Hostname will determine the domain name of the Free IPA setup, in this example minersonline.local. The Storage path will determine where Free IPA will store its data.\nI’m running these commands on an Ubuntu 22.04 system. The commands are probably the same on your system.\n1. Setup hostname sudo hostnamectl set-hostname ipa.minersonline.lan sudo nano /etc/hosts Add the line 10.0.0.97 ipa.minersonline.lan ipa to the top of the file but change 10.0.0.97 to your machine’s IP\nPress Control + X then Y to save the file.\n2. Configure your DNS On your router or your DNS server (like PiHole) add the ipa.minersonline.lan hostname to match the IP of your machine.\n[!NOTE] This step is different for different models of routers or DNS servers, please consult their documentation.\nSteps 1. Choose a container Chose a container from the [Free IPA Docker Hub](https://hub.docker.com/r/Free IPA/Free IPA-server/tags). I’ve chosen fedora-rawhide.\n2. Perform the installation The following command will run the image we built in the last step. This will run the installation process.\nI recommend answering no to Do you want to configure integrated DNS (BIND)? because the BIND dns server caused problems during my installation.\ndocker run --name Free IPA-server -ti \\ --read-only \\ -h ipa.minersonline.lan -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \\ --sysctl net.ipv6.conf.all.disable_ipv6=0 \\ -v /sys/fs/cgroup/Free IPA.scope:/sys/fs/cgroup:ro \\ -v /DATA/AppData/Free IPA-server:/data:Z \\ --tmpfs /run --tmpfs /tmp Free IPA/Free IPA-server:fedora-rawhide [!NOTE] If you get any errors please see the errors section for your error.\n3. Delete the existing container docker stop Free IPA-server docker rm Free IPA-server 4. Restart the container docker run -d --name Free IPA-server -ti \\ --read-only \\ -h ipa.minersonline.lan -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \\ --sysctl net.ipv6.conf.all.disable_ipv6=0 \\ -v /sys/fs/cgroup/Free IPA.scope:/sys/fs/cgroup:ro \\ -v /DATA/AppData/Free IPA-server:/data:Z \\ --restart unless-stopped \\ --tmpfs /run --tmpfs /tmp Free IPA/Free IPA-server:fedora-rawhide [!NOTE] If you get any errors please see the errors section for your error.\nErrors Failed to create /init.scope control group: Read-only file system If you get the error:\nFailed to create /init.scope control group: Read-only file system Failed to allocate manager object: Read-only file system [!!!!!!] Failed to allocate manager object. Exiting PID 1... 1. Delete existing containers / data docker rm Free IPA-server and rm -rf /DATA/AppData/Free IPA-server\n2. Perform the installation again docker run --name Free IPA-server -ti \\ --read-only \\ -h ipa.minersonline.lan -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \\ --sysctl net.ipv6.conf.all.disable_ipv6=0 \\ --cgroupns host \\ --security-opt seccomp=unconfined \\ -v /sys/fs/cgroup/Free IPA.scope:/sys/fs/cgroup:rw \\ -v /DATA/AppData/Free IPA-server:/data:Z \\ --privileged \\ --tmpfs /run --tmpfs /tmp Free IPA/Free IPA-server:fedora-rawhide --no-ntp 3. Delete the new container docker stop Free IPA-server docker rm Free IPA-server 4. Restart the container again docker run -d --name Free IPA-server -ti \\ --read-only \\ -h ipa.minersonline.lan -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \\ --sysctl net.ipv6.conf.all.disable_ipv6=0 \\ --cgroupns host \\ --security-opt seccomp=unconfined \\ -v /sys/fs/cgroup/Free IPA.scope:/sys/fs/cgroup:rw \\ -v /DATA/AppData/Free IPA-server:/data:Z \\ --restart unless-stopped \\ --privileged \\ --tmpfs /run --tmpfs /tmp Free IPA/Free IPA-server:fedora-rawhide --no-ntp ","date":1702649032,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742829686,"objectID":"6dff2d1a1ff339280994dbf91709b183","permalink":"https://ajh123.github.io/post/installing-freeipa-in-docker/","publishdate":"2023-12-15T14:03:52Z","relpermalink":"/post/installing-freeipa-in-docker/","section":"post","summary":"Prerequisites The following applications need to be installed on your system:\nDocker Git The guide will assume some details:\nHostname: ipa.minersonline.lan Storage path: /DATA/AppData/Free IPA-server Server IP: 10.0.0.97 You may changes these assumptions based on your requirements. The Hostname will determine the domain name of the Free IPA setup, in this example minersonline.local. The Storage path will determine where Free IPA will store its data.\nI’m running these commands on an Ubuntu 22.04 system. The commands are probably the same on your system.\n","tags":["Linux","Docker","Authentication","Free IPA"],"title":"Installing Free IPA in Docker","type":"post"}]